# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key=":QnUA<B7c?jObBj0msUxlBBWI^4/CSBXlOUYXVwL:@V[M2e2FacjqL0/xOt`eC8m"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Default database configuration
slick.dbs.default.profile="slick.jdbc.H2Profile$"
slick.dbs.default.db.driver="org.h2.Driver"
slick.dbs.default.db.url="jdbc:h2:mem:play"


play.evolutions.autoApply = true

play.filters.enabled += "play.filters.csrf.CSRFFilter"

play.filters {
  # Security headers filter configuration
  headers {
    # The Content-Security-Policy header. If null, the header is not set.

    # contentSecurityPolicy = "default-src 'self' *.cloudinary.com; script-src 'self' http://localhost:9000 'unsafe-inline'; connect-src 'self'; img-src 'self' http://localhost:9000; style-src 'self' http://localhost:9000 'unsafe-inline'; font-src 'self' http://localhost:9000 'unsafe-inline'"
    contentSecurityPolicy = "default-src 'self' *.cloudinary.com; script-src 'self' http://localhost:9000 'unsafe-inline'; style-src 'self' http://localhost:9000 'unsafe-inline'"

  }
}

cloudinary = {
  # cloud_name = <CLOUD_NAME>
  # api_key = <API_KEY>
  # api_secret = <API_SECRET>
  # or sepcify a CLOUDINARY_URL in env or explicitly
  url = ${CLOUDINARY_URL}
}